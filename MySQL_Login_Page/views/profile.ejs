<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Profile Page</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
  <link rel="stylesheet" href="./style.css">
  <style>
    /* Custom styles for the enhanced aesthetic theme */
    body {
      background-image: url('https://images2.alphacoders.com/261/26102.jpg'); /* Background image URL */
      background-repeat: no-repeat;
      background-size: cover;
      background-position: center;
      font-family: 'Arial', sans-serif;
      margin: 0;
      padding: 0;
    }
    .navbar {
            background-color: #343a40; /* Navbar background color */
        }
        .navbar-brand {
            font-size: 28px;
            font-weight: bold;
            color: #fff; /* Navbar brand text color */
        }
        .navbar-toggler-icon {
            background-color: #fff; /* Navbar toggler color */
        }
        .navbar-nav .nav-item {
            margin-right: 15px;
        }
        .navbar-nav .nav-link {
            color: #fff !important;
            font-weight: bold;
            transition: color 0.3s;
        }
        .navbar-nav .nav-link:hover {
            color: #ffc107 !important; /* Navbar link color on hover */
        }

    .navbar {
      background-color: #333; /* Dark gray navbar background color */
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Navbar box shadow */
    }
  
    .navbar-brand, .nav-link {
      color: #fff !important; /* Navbar text color */
    }
  
    .navbar-toggler-icon {
      background-color: #fff; /* Navbar toggler color */
    }
  
    .form-select, .form-control, .btn {
      background-color: #fff; /* Form elements background color */
      color: #333 !important; /* Form elements text color */
      border: 1px solid #ccc; /* Form elements border color */
      border-radius: 4px; /* Rounded corners for form elements */
      transition: all 0.3s ease; /* Smooth transition for all form elements */
    }
  
    .form-select:focus, .form-control:focus {
      box-shadow: 0 0 4px rgba(0, 0, 0, 0.2); /* Focus box shadow for form elements */
      border-color: #555; /* Border color on focus */
    }
  
    .card {
      background-color: rgba(255, 255, 255, 0.7); /* Transparent white background color */
      border: 1px solid #e0e0e0; /* Card border color */
      border-radius: 6px; /* Rounded corners for the card */
      margin-bottom: 20px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Card box shadow */
      transition: transform 0.2s ease; /* Smooth transition for card hover effect */
    }
  
    .card:hover {
      transform: translateY(-5px); /* Card lift on hover */
    }
  
    .card-title {
      color: #333; /* Card title color */
      font-size: 1.5rem; /* Larger font size for card title */
      margin-bottom: 10px;
    }
  
    .card-text {
      color: #666; /* Card text color */
      margin-bottom: 15px;
    }
  
    .btn-primary {
      background-color: #333 !important; /* Primary button background color */
      border: 1px solid #333 !important; /* Primary button border color */
      color: #fff !important; /* Primary button text color */
      transition: background-color 0.3s ease; /* Smooth transition for button color */
    }
  
    .btn-primary:hover {
      background-color: #555 !important; /* Darker color on hover */
    }
  
    /* Additional styling can be added as needed */
  
    .container {
      background-color: rgba(255, 255, 255, 0.7); /* Transparent white background color */
      padding: 20px;
      border-radius: 6px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      margin-top: 20px;
    }
  
    h1 {
      color: #333; /* Heading color */
      margin-bottom: 20px;
    }
  
    /* Avatar styles */
    .avatar-ctn {
      display: flex;
      justify-content: center;
      align-items: center;
      margin: 20px 0;
    }
  
    .avatar {
      width: 120px;
      height: 120px;
      border-radius: 50%;
      object-fit: cover;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
    
  
    /* Custom styles for the enhanced aesthetic theme end here */
  </style>

  
  
</head>

<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="/home.html">BookNook</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <!-- Replace '/my-book-list' with the actual link to the Book List page -->
            <a class="nav-link" aria-current="page" href="/my-book-list" style="color: #fff;">Book List</a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="/profile">Profile</a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="/auth/logout">Logout</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  <div class="container my-5">
    <div class="row">
      <div class="col-4">
        <div class="card">
          <div class="avatar-ctn">
            <img src="./avatar.png" class="avatar" alt="user profile picture">
          </div>
          <div class="card-body">
            <h5 class="card-title" id="username"><%= user.name %></h5>
            <p class="card-text">Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam quasi
              natus ullam explicabo vitae consectetur molestias aut esse, officiis labore sapiente
              architecto numquam iste minus similique quos mollitia reprehenderit delectus?</p>
            <a href="#" class="btn btn-primary" id="useremail"><%= user.email %></a>
          </div>
        </div>
      </div>
      <div class="col-8">
        <div class="card text-center">
          
          <div class="card-body">
            <h5 class="card-title" id="welcome">Hey, <%= user.name %>, welcome !</h5>
            <p class="card-text">
              Fill Form To Upload Your Book For Sale/Exchange. Enjoy!  
            </p>
            <a href="#" class="btn btn-primary" onclick="showUploadForm()">Upload Book</a>
          </div>
          
          
        </div>
        <div id="uploadFormContainer" style="display: none;"></div>
      </div>
    </div>
  </div>
  <script src="https://unpkg.com/react/umd/react.production.min.js" crossorigin></script>
  <script src="https://unpkg.com/react-dom/umd/react-dom.production.min.js" crossorigin></script>
  <script src="https://unpkg.com/babel-standalone/babel.min.js" crossorigin></script>
  <script type="text/babel">
    function UploadBookForm() {
      const handleSaleExchangeChange = (event) => {
      const priceInput = document.getElementById('price');
      const exchangeWithInput = document.getElementById('exchangeWith');
      
      priceInput.disabled = event.target.value === 'exchange';
      exchangeWithInput.required = event.target.value === 'exchange';
      exchangeWithInput.disabled = event.target.value === 'sale';
      exchangeWithInput.value = ''; // Reset the value when switching trade condition
    };

      function submitForm(event) {
  event.preventDefault();

  // Get form values
  const bookTitle = document.getElementById('bookTitle').value;
  const bookImage = document.getElementById('bookImage').files[0];
  const author = document.getElementById('author').value;
  const bookCondition = document.getElementById('bookCondition').value;
  const tradeCondition = document.querySelector('input[name="tradeCondition"]:checked').value;
  const price = document.getElementById('price').value;
  const exchangeWith = document.getElementById('exchangeWith').value;
  const providerName = document.getElementById('providerName').value;
const providerNumber = document.getElementById('providerNumber').value;
const providerLocation = document.getElementById('providerLocation').value; // Get the "Exchange With" value

  // Create a FormData object to send the form data including the file
  const formData = new FormData();
  formData.append('title', bookTitle);
  formData.append('author', author);
  formData.append('book_condition', bookCondition);
  formData.append('trade_condition', tradeCondition);
  formData.append('price', price);
  formData.append('exchangewith', exchangeWith); // Append the "Exchange With" value using the correct column name
  formData.append('image', bookImage);
  formData.append('provider_name', providerName);
  formData.append('provider_number', providerNumber); // Append the "Exchange With" value using the correct column name
  formData.append('provider_location', providerLocation);

  // Send the form data to the backend using fetch or axios
  fetch('/books/add-book', {
    method: 'POST',
    body: formData,
  })
    .then((response) => response.json())
    .then((data) => {
      // Handle the response from the backend, e.g., show a success message or handle errors
      console.log(data);
    })
    .catch((error) => {
      console.error('Error:', error);
      // Handle the error, e.g., show an error message to the user
    });

  // Reset the form
  document.getElementById('uploadForm').reset();
}


      return (
        <div>
          <form id="uploadForm" onSubmit={submitForm} method="post" action="/books/add-book" enctype="multipart/form-data">

            <div class="mb-3">
              <label for="bookTitle" class="form-label">Book Title</label>
              <input type="text" class="form-control" id="bookTitle" name="title" placeholder="Enter book title"
                required />
            </div>
            <div class="mb-3">
              <label for="author" class="form-label">Author</label>
              <input type="text" class="form-control" id="author" name="author" placeholder="Enter author name"
                required />
            </div>
            <div class="mb-3">
              <label for="bookCondition" class="form-label">Book Condition</label>
              <select class="form-control" id="bookCondition" name="book_condition" required>
                <option value="Good">Good</option>
                <option value="Fair">Fair</option>
                <option value="Poor">Poor</option>
              </select>
            </div>
            <div class="mb-3">
            <label for="tradeCondition" class="form-label">Trade Condition</label>
            <div class="form-check">
              <input class="form-check-input" type="radio" name="tradeCondition" id="sale" value="sale" required onChange={handleSaleExchangeChange} />
              <label class="form-check-label" for="sale">
                Sale
              </label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="radio" name="tradeCondition" id="exchange" value="exchange" required onChange={handleSaleExchangeChange} />
              <label class="form-check-label" for="exchange">
                Exchange
              </label>
            </div>
          </div>
            <div class="mb-3">
              <label for="price" class="form-label">Price</label>
              <input type="number" class="form-control" id="price" name="price" placeholder="Enter book price"
                required />
            </div>
            <div class="mb-3">
  <label for="bookImage" class="form-label">Book Image</label>
  <input type="file" class="form-control" id="bookImage" name="image" required />
</div>
<div class="mb-3">
  <label for="exchangeWith" class="form-label">Exchange With</label>
  <input type="text" class="form-control" id="exchangeWith" name="exchangeWith" placeholder="Enter book details for exchange" required />
</div>
<label for="providerName" class="form-label">Provider Name</label>
<input type="text" class="form-control" id="providerName" name="provider_name" placeholder="Enter provider name" required />

<label for="providerNumber" class="form-label">Provider Number</label>
<input type="text" class="form-control" id="providerNumber" name="provider_number" placeholder="Enter provider number" required />

<label for="providerLocation" class="form-label">Provider Location</label>
<input type="text" class="form-control" id="providerLocation" name="provider_location" placeholder="Enter provider location" required />


<button type="submit" class="btn btn-primary">Submit</button>
</form>
</div>
);
}

function showUploadForm() {
const uploadFormContainer = document.getElementById('uploadFormContainer');
ReactDOM.render(<UploadBookForm />, uploadFormContainer);
uploadFormContainer.style.display = 'block';
}

</script>
</body>
</html>